import java.util.*;

public class SudokuValidator {
    public static boolean isValid(int[][] b, List<List<int[]>> zones) {
        int n = 9;
        for (int i = 0; i < n; i++) {
            boolean[] row = new boolean[n + 1];
            boolean[] col = new boolean[n + 1];
            for (int j = 0; j < n; j++) {
                int rv = b[i][j], cv = b[j][i];
                if (rv < 1 || rv > n || row[rv]) return false;
                if (cv < 1 || cv > n || col[cv]) return false;
                row[rv] = col[cv] = true;
            }
        }
        for (List<int[]> zone : zones) {
            boolean[] seen = new boolean[n + 1];
            for (int[] c : zone) {
                int v = b[c[0]][c[1]];
                if (v < 1 || v > n || seen[v]) return false;
                seen[v] = true;
            }
        }
        return true;
    }

    public static void main(String[] args) {
        int[][] board = {
            {5,3,4,6,7,8,9,1,2},
            {6,7,2,1,9,5,3,4,8},
            {1,9,8,3,4,2,5,6,7},
            {8,5,9,7,6,1,4,2,3},
            {4,2,6,8,5,3,7,9,1},
            {7,1,3,9,2,4,8,5,6},
            {9,6,1,5,3,7,2,8,4},
            {2,8,7,4,1,9,6,3,5},
            {3,4,5,2,8,6,1,7,9}
        };
        List<List<int[]>> zones = new ArrayList<>();
        for (int r = 0; r < 9; r += 3)
            for (int c = 0; c < 9; c += 3) {
                List<int[]> z = new ArrayList<>();
                for (int i = 0; i < 3; i++)
                    for (int j = 0; j < 3; j++)
                        z.add(new int[]{r + i, c + j});
                zones.add(z);
            }
        System.out.println(isValid(board, zones));  // â†’ true
    }
}
