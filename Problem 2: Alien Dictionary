import java.util.*;

public class AlienDictionary {
    public static String alienOrder(String[] words) {
        Map<Character, Set<Character>> g = new HashMap<>();
        Map<Character, Integer> indeg = new HashMap<>();

        for (String w : words)
            for (char c : w) indeg.putIfAbsent(c, 0);

        for (int i = 0; i + 1 < words.length; i++) {
            String a = words[i], b = words[i + 1];
            if (a.length() > b.length() && a.startsWith(b)) return "";
            for (int j = 0; j < Math.min(a.length(), b.length()); j++) {
                char x = a.charAt(j), y = b.charAt(j);
                if (x != y) {
                    g.computeIfAbsent(x, k -> new HashSet<>());
                    if (g.get(x).add(y)) indeg.put(y, indeg.get(y) + 1);
                    break;
                }
            }
        }

        Queue<Character> q = new ArrayDeque<>();
        for (var e : indeg.entrySet())
            if (e.getValue() == 0) q.add(e.getKey());

        StringBuilder sb = new StringBuilder();
        while (!q.isEmpty()) {
            char c = q.poll();
            sb.append(c);
            for (char nei : g.getOrDefault(c, Collections.emptySet())) {
                indeg.put(nei, indeg.get(nei) - 1);
                if (indeg.get(nei) == 0) q.add(nei);
            }
        }
        return sb.length() == indeg.size() ? sb.toString() : "";
    }

    public static void main(String[] args) {
        System.out.println(alienOrder(new String[]{"baa","abcd","abca","cab","cad"})); // bdac
        System.out.println(alienOrder(new String[]{"wrt","wrf","er","ett","rftt"})); // wertf
    }
}
